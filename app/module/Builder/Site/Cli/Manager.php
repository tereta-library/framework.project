<?php declare(strict_types=1);

namespace Builder\Site\Cli;

use Builder\Site\Model\Domain as DomainModel;
use Builder\Site\Model\Resource\Domain as DomainResourceModel;
use Builder\Site\Model\Resource\Site as SiteResourceModel;
use Builder\Site\Model\Resource\User as SiteUserResourceModel;
use Builder\Site\Model\Site as SiteModel;
use Builder\Site\Model\User as SiteUserModel;
use Framework\Cli\Interface\Controller;
use Framework\Cli\Symbol;
use Exception;
use Framework\Database\Singleton as SingletonDatabase;
use Framework\User\Model\Resource\User as UserResourceModel;
use Framework\User\Model\User as UserModel;
use Builder\Site\Facade\Manager as SiteManagerFacade;

/**
 * Generated by www.Tereta.dev on 2024-09-13 20:13:15
 *
 * @class Builder\Site\Cli\Manager
 * @package Builder\Site\Cli
 */
class Manager implements Controller
{
    /**
     * @cli site:manager:create
     * @cliDescription Create new site
     * @param string $identifier identifier of the site
     * @return void
     * @throws Exception
     */
    public function create(string $identifier): void
    {
        // Make a new site
        $siteResourceModel = (new SiteResourceModel);
        $siteResourceModel->load($siteModel = new SiteModel(), $identifier, 'identifier');

        if ($siteModel->get('id')) {
            throw new Exception("The \"{$siteModel->get('identifier')}\" site already exists");
        }

        echo Symbol::COLOR_BRIGHT_CYAN . "Web site creating with the \"{$identifier}\" identifier...\n" . Symbol::COLOR_RESET;
        echo Symbol::COLOR_BRIGHT_CYAN . "* - it is required fields\n" . Symbol::COLOR_RESET;

        $site = [
            'name' => readline("Site name [Default Name]: ") ?? 'Default Name',
            'tagline' => readline("Site tagline [Default Tagline]: ") ?? 'Default Tagline',
            'phone' => readline("Contact number [Default Phone]: ") ?? 'Default Phone',
            'email' => readline("Contact email [Default Email]: ") ?? 'Default Email',
            'address' => readline("Physical address [Default Address]: ") ?? 'Default Address',
            'copyright' => readline("Copyright string (© 2024 ...) [© 2024 Tereta Alexander (www.tereta.dev)]: ") ?? '© 2024 Tereta Alexander (www.tereta.dev)',
        ];

        $site['name'] = trim($site['name']) ? trim($site['name']) : 'Default Name';
        $site['tagline'] = trim($site['tagline']) ? trim($site['tagline']) : 'Default Tagline';
        $site['phone'] = trim($site['phone']) ? trim($site['phone']) : 'Default Phone';
        $site['email'] = trim($site['email']) ? trim($site['email']) : 'Default Email';
        $site['address'] = trim($site['address']) ? trim($site['address']) : 'Default Address';
        $site['copyright'] = trim($site['copyright']) ? trim($site['copyright']) : '© 2024 Tereta Alexander (www.tereta.dev)';

        $sitePrimaryDomain = trim(readline("Primary domain [sample.localhost]" . Symbol::COLOR_RED . "*" . Symbol::COLOR_RESET . ": ")) ?? 'sample.localhost';
        $sitePrimaryDomain = trim($sitePrimaryDomain);
        if (!$sitePrimaryDomain) {
            throw new Exception("Primary domain is required");
        }

        $administrator = [
            'email' => readline("Administrator email [sample@gmail.com]" . Symbol::COLOR_RED . "*" . Symbol::COLOR_RESET . ": "),
            'password' => readline("Administrator password" . Symbol::COLOR_RED . "*" . Symbol::COLOR_RESET . ": "),
        ];
        $administrator['email'] = trim($administrator['email']);
        $administrator['password'] = trim($administrator['password']);

        if (!$administrator['email'] || !$administrator['password']) {
            throw new Exception("Administrator email and password are required");
        }

        foreach((new SiteManagerFacade)->createSite($identifier, $site, $sitePrimaryDomain, $administrator) as $message) {
            switch ($message->getType()) {
                case($message::TYPE_INFO):
                    echo Symbol::COLOR_GREEN . $message . Symbol::COLOR_RESET . "\n";
                    break;
                default:
                    echo $message;
            }
        }
    }
}